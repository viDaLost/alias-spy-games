let aliasWords = [];
let aliasIndex = 0;
let guessedAlias = [];

function startAliasGame() {
  const container = document.getElementById("game-container");

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  container.innerHTML = `
    <h2>üéÆ –ê–ª–∏–∞—Å</h2>
    <p><strong>–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:</strong></p>

    <div style="margin-bottom:15px;">
      <button onclick="loadAliasWords('easy')" class="menu-button">üü¢ –õ—ë–≥–∫–∏–π</button><br>
      <button onclick="loadAliasWords('medium')" class="menu-button">üü° –°—Ä–µ–¥–Ω–∏–π</button><br>
      <button onclick="loadAliasWords('hard')" class="menu-button">üî¥ –¢—è–∂—ë–ª—ã–π</button><br>
    </div>

    <button onclick="goToMainMenu()" class="back-button">‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</button>
  `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤ –∏–∑ JSON –ø–æ —É—Ä–æ–≤–Ω—é
async function loadAliasWords(difficulty) {
  let url = "";

  if (difficulty === "easy") {
    url = "data/easy_bible_words.json";
  } else if (difficulty === "medium") {
    url = "data/medium_bible_words.json";
  } else if (difficulty === "hard") {
    url = "data/hard_bible_words.json";
  }

  try {
    const words = await loadJSON(url);
    showAliasSetup(words, difficulty);
  } catch (e) {
    alert(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ª–æ–≤: ${e.message}`);
    console.error(e);
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Ä–æ–≤–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏
function showAliasSetup(words, difficulty) {
  const container = document.getElementById("game-container");
  const difficultyName = getDifficultyName(difficulty);

  container.innerHTML = `
    <h2>üéÆ –ê–ª–∏–∞—Å ‚Äî ${difficultyName} —É—Ä–æ–≤–µ–Ω—å</h2>
    <p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è (1‚Äì60 —Å–µ–∫—É–Ω–¥):</strong></p>
    <input type="number" id="timerValue" min="1" max="60" value="60"><br><br>
    
    <button onclick="startAliasTimer('${difficulty}')" class="start-button">‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—É</button>
    <button onclick="goToMainMenu()" class="back-button">‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</button>
  `;
}

// –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è
function getDifficultyName(difficulty) {
  return {
    easy: "–õ—ë–≥–∫–∏–π",
    medium: "–°—Ä–µ–¥–Ω–∏–π",
    hard: "–¢—è–∂—ë–ª—ã–π"
  }[difficulty] || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π";
}

// –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –∏ –∏–≥—Ä—ã
async function startAliasTimer(difficulty) {
  const input = document.getElementById("timerValue").value;
  let seconds = parseInt(input);

  if (isNaN(seconds) || seconds < 1 || seconds > 60) {
    alert("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 60.");
    return;
  }

  let url = "";
  if (difficulty === "easy") {
    url = "data/easy_bible_words.json";
  } else if (difficulty === "medium") {
    url = "data/medium_bible_words.json";
  } else if (difficulty === "hard") {
    url = "data/hard_bible_words.json";
  }

  try {
    const words = await loadJSON(url);
    aliasWords = shuffleArray([...words]);
    aliasIndex = 0;
    guessedAlias = [];

    const container = document.getElementById("game-container");
    container.innerHTML = `
      <p id="alias-timer" style="font-size:2rem; text-align:center; margin-top:20px; font-weight:bold;">${seconds} —Å–µ–∫—É–Ω–¥</p>
      <div id="alias-word" style="text-align:center; font-size:1.5rem; margin:20px 0;"></div>

      <div style="display:flex; gap:10px; justify-content:center; margin-top:20px;">
        <button onclick="markGuessed(true)" class="correct-button">‚úÖ –û—Ç–≥–∞–¥–∞–Ω–æ</button>
        <button onclick="markGuessed(false)" class="wrong-button">‚ùå –ù–µ –æ—Ç–≥–∞–¥–∞–Ω–æ</button>
      </div>

      <button onclick="goToMainMenu()" class="back-button">‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</button>
    `;

    showNextAliasWord();

    const timerEl = document.getElementById("alias-timer");

    window.aliasInterval = setInterval(() => {
      seconds--;
      timerEl.textContent = `${seconds} —Å–µ–∫—É–Ω–¥`;
      if (seconds <= 10) timerEl.style.color = "red";

      if (seconds <= 0) {
        clearInterval(window.aliasInterval);
        timerEl.textContent = "‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ!";
        setTimeout(() => {
          while (aliasIndex < aliasWords.length) {
            guessedAlias.push({ word: aliasWords[aliasIndex], correct: false });
            aliasIndex++;
          }
          showAliasResults();
        }, 1000);
      }
    }, 1000);
  } catch (e) {
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã.");
    console.error(e);
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ
function showNextAliasWord() {
  const wordEl = document.getElementById("alias-word");

  if (aliasIndex >= aliasWords.length) {
    showAliasResults();
    return;
  }

  wordEl.innerHTML = `<div class="card">${aliasWords[aliasIndex]}</div>`;
}

// –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ —É–≥–∞–¥–∞–Ω–Ω–æ–µ / –Ω–µ —É–≥–∞–¥–∞–Ω–Ω–æ–µ
function markGuessed(correct) {
  if (aliasIndex < aliasWords.length) {
    guessedAlias.push({ word: aliasWords[aliasIndex], correct });
    aliasIndex++;
    showNextAliasWord();
  }
}

// –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ‚Äî —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
function showAliasResults() {
  const container = document.getElementById("game-container");
  container.innerHTML = "<h2>üèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</h2><ul>";

  guessedAlias.forEach(item => {
    const color = item.correct ? "green" : "red";
    container.innerHTML += `<li style="color:${color};">${item.word}</li>`;
  });

  container.innerHTML += "</ul>";
  container.innerHTML += `<button onclick="startAliasGame()" class="menu-button">üîÑ –ù–æ–≤–∞—è –∏–≥—Ä–∞</button>`;
  container.innerHTML += `<button onclick="goToMainMenu()" class="back-button">‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</button>`;
}

// –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
function shuffleArray(arr) {
  return [...arr].sort(() => Math.random() - 0.5);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ JSON
async function loadJSON(url) {
  const res = await fetch(url);
  if (!res.ok) throw new Error(`HTTP –æ—à–∏–±–∫–∞: ${res.status}`);
  return await res.json();
}
